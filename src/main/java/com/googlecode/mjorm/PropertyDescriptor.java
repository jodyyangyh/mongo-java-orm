package com.googlecode.mjorm;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.lang.reflect.Type;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;

import com.googlecode.jot.ReflectionUtil;
import com.googlecode.jot.TranslationHints;

/**
 * A descriptor of an object property.
 */
public class PropertyDescriptor {

	private String name;
	private Map<String, Object> translationHints = new HashMap<String, Object>();
	private String propColumn;
	private Class<?> objectClass;
	private Type genericType;
	private Type[] parameterTypes;
	private Method setter;
	private Method getter;
	private boolean isIdentifier;
	private boolean isAutoGenerated;

	/**
	 * Creates {@link TransationHint}s.
	 * @return the hints
	 */
	public TranslationHints createTranslationHints() {
		TranslationHints ret = new TranslationHints();
		for (Entry<String, Object> entry : translationHints.entrySet()) {
			ret.setOther(entry.getKey(), entry.getValue());
		}
		Type[] paramTypes = parameterTypes.length>0
			? parameterTypes
			: ReflectionUtil.getTypeParameters(genericType);
		ret.setTypeParameters(paramTypes);
		return ret;
	}

	/**
	 * Sets the value on the given target.
	 * @param target the target
	 * @param value the value
	 * @throws IllegalAccessException on error
	 * @throws InvocationTargetException on error
	 */
	public void set(Object target, Object value)
		throws IllegalAccessException,
		InvocationTargetException {
		setter.setAccessible(true);
		setter.invoke(target, value);
	}

	/**
	 * Gets the value on the given target.
	 * @param target the target
	 * @return the value
	 * @throws IllegalAccessException on error
	 * @throws InvocationTargetException on error
	 */
	public Object get(Object target)
		throws IllegalAccessException,
		InvocationTargetException {
		getter.setAccessible(true);
		return getter.invoke(target);
	}

	/**
	 * @return the name
	 */
	public String getName() {
		return name;
	}

	/**
	 * @param name the name to set
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * @return the translationHints
	 */
	public Map<String, Object> getTranslationHints() {
		return translationHints;
	}

	/**
	 * @param translationHints the translationHints to set
	 */
	public void setTranslationHints(Map<String, Object> translationHints) {
		this.translationHints = translationHints;
	}

	/**
	 * @return the objectClass
	 */
	public Class<?> getObjectClass() {
		return objectClass;
	}

	/**
	 * @param objectClass the objectClass to set
	 */
	public void setObjectClass(Class<?> objectClass) {
		this.objectClass = objectClass;
	}

	/**
	 * @return the genericType
	 */
	public Type getGenericType() {
		return genericType;
	}

	/**
	 * @param genericType the genericType to set
	 */
	public void setGenericType(Type genericType) {
		this.genericType = genericType;
	}

	/**
	 * @return the parameterTypes
	 */
	public Type[] getParameterTypes() {
		return parameterTypes;
	}

	/**
	 * @param parameterTypes the parameterTypes to set
	 */
	public void setParameterTypes(Type[] parameterTypes) {
		this.parameterTypes = Arrays.copyOf(parameterTypes, parameterTypes.length);
	}

	/**
	 * @return the setter
	 */
	public Method getSetter() {
		return setter;
	}

	/**
	 * @param setter the setter to set
	 */
	public void setSetter(Method setter) {
		this.setter = setter;
	}

	/**
	 * @return the getter
	 */
	public Method getGetter() {
		return getter;
	}

	/**
	 * @param getter the getter to set
	 */
	public void setGetter(Method getter) {
		this.getter = getter;
	}

	/**
	 * @return the isIdentifier
	 */
	public boolean isIdentifier() {
		return isIdentifier;
	}

	/**
	 * @param isIdentifier the isIdentifier to set
	 */
	public void setIdentifier(boolean isIdentifier) {
		this.isIdentifier = isIdentifier;
	}

	/**
	 * @return the isAutoGenerated
	 */
	public boolean isAutoGenerated() {
		return isAutoGenerated;
	}

	/**
	 * @param isAutoGenerated the isAutoGenerated to set
	 */
	public void setAutoGenerated(boolean isAutoGenerated) {
		this.isAutoGenerated = isAutoGenerated;
	}

	/**
	 * @return the propColumn
	 */
	public String getPropColumn() {
		return propColumn;
	}

	/**
	 * @param propColumn the propColumn to set
	 */
	public void setPropColumn(String propColumn) {
		this.propColumn = propColumn;
	}

}
